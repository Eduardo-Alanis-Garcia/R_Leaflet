mun = sf::read_sf("Datos/Municipios/municipiosjair.shp")
mun$geometry[1] |>  plot()
mun = mun |>
dplyr::arrange(CVE_MUN)
mun$geometry[69] |>  plot()
i = 1
fila = mun[i,]
View(fila)
plot(fila$geometry)
for (i in 1:nrow(mun)) {
fila = mun[i,]
png(filename = paste0("Img/Municipios/",fila$NOM_MUN, ".png"), width = 1920, height = 1470)
plot(fila$geometry)
dev.off()
}
mun = sf::read_sf("Datos/Municipios/municipiosjair.shp")
list.files(path = "Img/Municipios/", pattern = "//.png", full.names = T, recursive = T)
list.files(path = "Img/Municipios/", pattern = "\\.png$", full.names = T, recursive = T)
archivos = list.files(path = "Img/Municipios/", pattern = "\\.png$", full.names = T, recursive = T) |>  data.frame()
View(archivos)
archivos = archivos |>
dplyr::rename(img_direccion = list.files.path....Img.Municipios....pattern.......png....full.names...T..)
archivos = archivos |>
dplyr::mutate(municipio = basename(img_direccion))
View(archivos)
archivos = archivos |>
dplyr::mutate(municipio = basename(img_direccion) |> gsub(pattern = ".png", replacement = "") |>  stringr::str_squish())
View(archivos)
names(mun)
mun = mun |>
dplyr::left_join(y = archivos, by = c("NOM_MUN" = "municipio"))
View(mun)
mun = mun |>
dplyr::select(CVEGEO, NOM_MUN, Area, PERIMETER, img_direccion, geometry)
View(mun)
library(leaflet)
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = mun$NOM_MUN)
mapa
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$img_direccion, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", mun$NOM_MUN, "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}
))
mapa
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$img_direccion, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}
))
mapa
mun$img_direccion
mun$img_direccion
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src= ", mun$img_direccion, " style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}
))
mapa
"C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/R_Leaflet"
paste0("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/R_Leaflet/", mun$img_direccion[1])
paste0("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/R_Leaflet/", mun$img_direccion[1])
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", paste0("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/R_Leaflet/",mun$img_direccion), "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}
))
mapa
paste0("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/R_Leaflet/",mun$img_direccion)
View(archivos)
mun$img_b64 <- sapply(mun$img_direccion, function(path) {
dataURI(file = path, mime = "image/png")
})
library(base64enc)
mun$img_b64 <- sapply(mun$img_direccion, function(path) {
dataURI(file = path, mime = "image/png")
})
View(mun)
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$img_b64, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}
))
mapa
mun$img_direccion
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", paste0("https://github.com/Eduardo-Alanis-Garcia/R_Leaflet/blob/main/", mun$img_direccion), "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}
))
mapa
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", paste0("https://github.com/Eduardo-Alanis-Garcia/R_Leaflet/blob/main/", mun$img_direccion), "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}),
popup = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", paste0("https://github.com/Eduardo-Alanis-Garcia/R_Leaflet/blob/main/", mun$img_direccion), "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)})
)
mapa
library(httr)
library(jsonlite)
# Parámetros del repositorio
owner <- "Eduardo-Alanis-Garcia"
repo  <- "R_Leaflet"
branch <- "main"
folder <- "Img/Municipios"
exts <- c(".png")
# URL de la API para listar el árbol completo del repositorio
url <- paste0("https://api.github.com/repos/", owner, "/", repo, "/git/trees/", branch, "?recursive=1")
# Realizar la solicitud a la API
resp <- GET(url)
stop_for_status(resp)
data <- content(resp, as = "text", encoding = "UTF-8")
json <- fromJSON(data)
# Filtrar archivos que son imágenes
files <- json$tree[json$tree$type == "blob", "path"]
images <- files[sapply(files, function(f) any(endsWith(tolower(f), exts)))]
# Construir URLs RAW
links <- paste0("https://raw.githubusercontent.com/", owner, "/", repo, "/", branch, "/", images)
# Mostrar los enlaces
print(links)
git = links |>  as.data.frame()
View(git)
git = git |>
dplyr::mutate(municipios = basename(links) |>  gsub("\\.png$", replacement = "") |>  stringr::str_squish())
View(git)
links |>  basename()
git = git |>
dplyr::mutate(municipios = basename(links) |>  gsub("\\.png", replacement = "") |>  stringr::str_squish())
git = git |>
dplyr::mutate(municipios = basename(links) |>  gsub(".png", replacement = "") |>  stringr::str_squish())
View(git)
View(mun)
View(git)
git = git |>
dplyr::mutate(municipios = links |>  gsub(pattern = ".png", replacement = "") |>  stringr::str_squish())
View(git)
git = git |>
dplyr::mutate(municipios = links |> basename() |>  gsub(pattern = ".png", replacement = "") |>  stringr::str_squish())
View(git)
View(mun)
mun = sf::read_sf("Datos/Municipios/municipiosjair.shp")
archivos = list.files(path = "Img/Municipios/", pattern = "\\.png$", full.names = T, recursive = T) |>  data.frame()
archivos = archivos |>
dplyr::rename(img_direccion = list.files.path....Img.Municipios....pattern.......png....full.names...T..)
archivos = archivos |>
dplyr::mutate(municipio = basename(img_direccion) |> gsub(pattern = ".png", replacement = "") |>  stringr::str_squish())
mun = mun |>
dplyr::left_join(y = archivos, by = c("NOM_MUN" = "municipio"))
mun = mun |>
dplyr::select(CVEGEO, NOM_MUN, Area, PERIMETER, img_direccion, geometry)
names(mun)
names(git)
mun = mun |>
dplyr::left_join(y = git, by = c("NOM_MUN" = "municipios"))
View(mun)
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$links, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}),
popup = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", paste0("https://github.com/Eduardo-Alanis-Garcia/R_Leaflet/blob/main/", mun$img_direccion), "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)})
)
mapa
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$links, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}),
popup = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$links, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)})
)
mapa
mun = sf::read_sf("Datos/Municipios/municipiosjair.shp")
mun = mun |>
dplyr::arrange(CVE_MUN)
mun$geometry[69] |>  plot()
fila = mun[i,]
png(filename = paste0("Img/Municipios/",fila$NOM_MUN, ".png"), width = 1920, height = 1470)
plot(fila$geometry, col = "red")
i = 1
plot(fila$geometry, col = "red")
i = 1
fila = mun[i,]
plot(fila$geometry, col = "red")
dev.off()
mun = sf::read_sf("Datos/Municipios/municipiosjair.shp")
mun = mun |>
dplyr::arrange(CVE_MUN)
for (i in 1:nrow(mun)) {
fila = mun[i,]
png(filename = paste0("Img/Municipios/",fila$NOM_MUN, ".png"), width = 1920, height = 1470)
plot(fila$geometry, col = "red")
dev.off()
}
for (i in 1:nrow(mun)) {
fila = mun[i,]
png(filename = paste0("Img/Municipios/",fila$NOM_MUN, ".png"), width = 1920, height = 1470)
plot(fila$geometry, col = "black")
dev.off()
}
mun = sf::read_sf("Datos/Municipios/municipiosjair.shp")
archivos = list.files(path = "Img/Municipios/", pattern = "\\.png$", full.names = T, recursive = T) |>  data.frame()
archivos = archivos |>
dplyr::rename(img_direccion = list.files.path....Img.Municipios....pattern.......png....full.names...T..)
archivos = archivos |>
dplyr::mutate(municipio = basename(img_direccion) |> gsub(pattern = ".png", replacement = "") |>  stringr::str_squish())
mun = mun |>
dplyr::left_join(y = archivos, by = c("NOM_MUN" = "municipio"))
mun = mun |>
dplyr::select(CVEGEO, NOM_MUN, Area, PERIMETER, img_direccion, geometry)
mun = sf::read_sf("Datos/Municipios/municipiosjair.shp")
archivos = list.files(path = "Img/Municipios/", pattern = "\\.png$", full.names = T, recursive = T) |>  data.frame()
archivos = archivos |>
dplyr::rename(img_direccion = list.files.path....Img.Municipios....pattern.......png....full.names...T..)
archivos = archivos |>
dplyr::mutate(municipio = basename(img_direccion) |> gsub(pattern = ".png", replacement = "") |>  stringr::str_squish())
mun = mun |>
dplyr::left_join(y = archivos, by = c("NOM_MUN" = "municipio"))
mun = mun |>
dplyr::select(CVEGEO, NOM_MUN, Area, PERIMETER, img_direccion, geometry)
View(archivos)
View(archivos)
View(mun)
library(httr)
library(jsonlite)
# Parámetros del repositorio
owner <- "Eduardo-Alanis-Garcia"
repo  <- "R_Leaflet"
branch <- "main"
folder <- "Img/Municipios"
exts <- c(".png")
# URL de la API para listar el árbol completo del repositorio
url <- paste0("https://api.github.com/repos/", owner, "/", repo, "/git/trees/", branch, "?recursive=1")
# Realizar la solicitud a la API
resp <- GET(url)
stop_for_status(resp)
data <- content(resp, as = "text", encoding = "UTF-8")
json <- fromJSON(data)
# Filtrar archivos que son imágenes
files <- json$tree[json$tree$type == "blob", "path"]
images <- files[sapply(files, function(f) any(endsWith(tolower(f), exts)))]
# Construir URLs RAW
links <- paste0("https://raw.githubusercontent.com/", owner, "/", repo, "/", branch, "/", images)
# Mostrar los enlaces
print(links)
git = links |>  as.data.frame()
git = git |>
dplyr::mutate(municipios = links |> basename() |>  gsub(pattern = ".png", replacement = "") |>  stringr::str_squish())
names(git)
mun = mun |>
dplyr::left_join(y = git, by = c("NOM_MUN" = "municipios"))
library(leaflet)
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$img_direccion, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}),
popup = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$links, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)})
)
mapa
View(mun)
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$links, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}),
popup = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$links, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)})
)
mapa
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$links, "' style='width:auto; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}),
popup = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$links, "' style='width:30px; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)})
)
mapa
mapa = leaflet() |>
addTiles() |>
addPolygons(data = mun,
label = paste0(
"<div style='display:flex; align-items:center;'>",
"<img src='", mun$links, "' style='width:auto; height:30px; margin-right:5px;'>",
"<span>", "<b>", mun$NOM_MUN, "</b>", "</span>",
"</div>"
) |> lapply(FUN =  function(x){htmltools::HTML(x)}),
)
mapa
source("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/R_Leaflet/label_basic_card.R", echo = TRUE)
source("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/R_Leaflet/Links img de Github.R", echo = TRUE)
source("C:/Users/eagel/OneDrive/Escritorio/Lalo/Escuela/Gob/Interes/R_Leaflet/label_basic_card.R", echo = TRUE)
datos = readxl::read_excel("Datos/Combis/Rutas ZMP.xlsx")
datos = readxl::read_excel("Datos/Combis/Rutas ZMP.xlsx")
View(datos)
names(datos) = datos[1,]
datos = readxl::read_excel("Datos/Combis/Rutas ZMP.xlsx")
names(datos) = datos[1,]
names(datos)
View(datos)
datos = datos |>
dplyr::filter(DERROTERO != "DERROTERO")
datos = readxl::read_excel("Datos/Combis/Rutas ZMP.xlsx")
names(datos) = datos[1,]
names(datos)
View(datos)
names(datos) = c("numero", "mnemotecnica", "derrotero", "unidades", "extra")
datos = datos |>
dplyr::filter(derrotero != "DERROTERO")
View(datos)
layers_pachuca_kml = ("Datos/Combis/Pachuca de Soto.kml" |> st_layers())$name |>
lapply(\(x){st_read("Datos/Combis/Pachuca de Soto.kml", layer = x )})
layers_pachuca_kml = ("Datos/Combis/Pachuca de Soto.kml" |> sf::st_layers())$name |>
lapply(\(x){st_read("Datos/Combis/Pachuca de Soto.kml", layer = x )})
library(sf)
layers_pachuca_kml = ("Datos/Combis/Pachuca de Soto.kml" |> st_layers())$name |>
lapply(\(x){st_read("Datos/Combis/Pachuca de Soto.kml", layer = x )})
rutas_pachuca = do.call(rbind,layers_pachuca_kml)
rutas_pachuca = rutas_pachuca |> sf::st_zm()
rutas_pachuca = rutas_pachuca |>
dplyr::mutate(origen = "Datos/Combis/Pachuca de Soto.kml")
View(rutas_pachuca)
View(datos)
View(layers_pachuca_kml)
View(layers_pachuca_kml)
View(datos)
View(layers_pachuca_kml)
View(rutas_pachuca)
"Img/Combis/" |> list.files(all.files = T, full.names = T)
imagenes = "Img/Combis/" |> list.files(all.files = T, full.names = T) |>
imagenes = "Img/Combis/" |> list.files(all.files = T, full.names = T) |>
imagenes = imagenes[!grepl("combi", imagenes)]
imagenes = "Img/Combis/" |> list.files(all.files = T, full.names = T) |>
imagenes = imagenes[!grepl("combi", imagenes)]
imagenes = "Img/Combis/" |> list.files(all.files = T, full.names = T)
imagenes = imagenes[!grepl("combi", imagenes)]
imagenes
